{"ast":null,"code":"var _jsxFileName = \"/Users/vietqnguyen/Desktop/React/01-starting-setup/src/components/Expenses/Expenses.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport ExpenseItem from \"./ExpenseItem\";\nimport Card from '../UI/Card';\nimport './Expenses.css';\nimport ExpensesFilter from \"../ExpensesFilter/ExpensesFilter\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Expenses = props => {\n  _s();\n\n  const [filteredYear, setFilteredYear] = useState('');\n\n  const filterChangeHandler = selectedYear => {\n    setFilteredYear(selectedYear);\n  };\n\n  const [filteredItems, setFilteredItems] = useState('');\n  props.items.map(expense => {\n    if (expense.date.year === filteredYear) setFilteredItems(prev => [expense, ...prev]);\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      className: \"expenses\",\n      children: [/*#__PURE__*/_jsxDEV(ExpensesFilter, {\n        selected: filteredYear,\n        onChangeFilter: filterChangeHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 17\n      }, this), props.items.map(filteredItems => /*#__PURE__*/_jsxDEV(ExpenseItem, {\n        title: filteredItems.title,\n        amount: filteredItems.amount,\n        date: filteredItems.date\n      }, filteredItems.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 21\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Expenses, \"cnoFH8j4JtGpK+ZLQjCtvJcpuRY=\");\n\n_c = Expenses;\nexport default Expenses;\n\nvar _c;\n\n$RefreshReg$(_c, \"Expenses\");","map":{"version":3,"sources":["/Users/vietqnguyen/Desktop/React/01-starting-setup/src/components/Expenses/Expenses.js"],"names":["React","useState","ExpenseItem","Card","ExpensesFilter","Expenses","props","filteredYear","setFilteredYear","filterChangeHandler","selectedYear","filteredItems","setFilteredItems","items","map","expense","date","year","prev","title","amount","id"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,IAAP,MAAiB,YAAjB;AACA,OAAO,gBAAP;AACA,OAAOC,cAAP,MAA2B,kCAA3B;;;AAEA,MAAMC,QAAQ,GAAIC,KAAD,IAAW;AAAA;;AACxB,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCP,QAAQ,CAAC,EAAD,CAAhD;;AACA,QAAMQ,mBAAmB,GAAIC,YAAD,IAAkB;AAC1CF,IAAAA,eAAe,CAACE,YAAD,CAAf;AACH,GAFD;;AAGA,QAAM,CAACC,aAAD,EAAgBC,gBAAhB,IAAoCX,QAAQ,CAAC,EAAD,CAAlD;AACAK,EAAAA,KAAK,CAACO,KAAN,CAAYC,GAAZ,CAAiBC,OAAD,IAAa;AACzB,QAAIA,OAAO,CAACC,IAAR,CAAaC,IAAb,KAAsBV,YAA1B,EACIK,gBAAgB,CAAEM,IAAD,IAAU,CAACH,OAAD,EAAU,GAAGG,IAAb,CAAX,CAAhB;AACP,GAHD;AAIA,sBACI;AAAA,2BACI,QAAC,IAAD;AAAM,MAAA,SAAS,EAAC,UAAhB;AAAA,8BACI,QAAC,cAAD;AACI,QAAA,QAAQ,EAAEX,YADd;AAEI,QAAA,cAAc,EAAEE;AAFpB;AAAA;AAAA;AAAA;AAAA,cADJ,EAKKH,KAAK,CAACO,KAAN,CAAYC,GAAZ,CAAiBH,aAAD,iBAEb,QAAC,WAAD;AAEI,QAAA,KAAK,EAAEA,aAAa,CAACQ,KAFzB;AAGI,QAAA,MAAM,EAAER,aAAa,CAACS,MAH1B;AAII,QAAA,IAAI,EAAET,aAAa,CAACK;AAJxB,SACSL,aAAa,CAACU,EADvB;AAAA;AAAA;AAAA;AAAA,cAFH,CALL;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAmBH,CA7BD;;GAAMhB,Q;;KAAAA,Q;AA+BN,eAAeA,QAAf","sourcesContent":["import React, { useState } from 'react';\nimport ExpenseItem from \"./ExpenseItem\";\nimport Card from '../UI/Card';\nimport './Expenses.css';\nimport ExpensesFilter from \"../ExpensesFilter/ExpensesFilter\";\n\nconst Expenses = (props) => {\n    const [filteredYear, setFilteredYear] = useState('');\n    const filterChangeHandler = (selectedYear) => {\n        setFilteredYear(selectedYear);\n    }\n    const [filteredItems, setFilteredItems] = useState('');\n    props.items.map((expense) => {\n        if (expense.date.year === filteredYear)\n            setFilteredItems((prev) => [expense, ...prev])\n    })\n    return (\n        <div>\n            <Card className=\"expenses\">\n                <ExpensesFilter\n                    selected={filteredYear}\n                    onChangeFilter={filterChangeHandler}\n                />\n                {props.items.map((filteredItems) =>\n                (\n                    <ExpenseItem\n                        key={filteredItems.id}\n                        title={filteredItems.title}\n                        amount={filteredItems.amount}\n                        date={filteredItems.date}\n                    />\n                ))}\n            </Card>\n        </div>\n    )\n}\n\nexport default Expenses;\n"]},"metadata":{},"sourceType":"module"}